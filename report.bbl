\begin{thebibliography}{1}

\bibitem{compcert}


\bibitem{cakeml}
Ramana Kumar, Magnus~O. Myreen, Michael Norrish, and Scott Owens.
\newblock Cakeml: A verified implementation of ml.
\newblock In {\em Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages}, POPL '14, page 179–191, New York, NY,
  USA, 2014. Association for Computing Machinery.

\bibitem{cakemlinlining}
ALEXANDER MIHAJLOVIC.
\newblock Verifying function inlinining in cakeml.
\newblock {MSc.} thesis, 2018.

\bibitem{pilsner}
Georg Neis, Chung-Kil Hur, Jan-Oliver Kaiser, Craig McLaughlin, Derek Dreyer,
  and Viktor Vafeiadis.
\newblock Pilsner: A compositionally verified compiler for a higher-order
  imperative language.
\newblock {\em SIGPLAN Not.}, 50(9):166–178, aug 2015.

\bibitem{secretsghc}
Simon Peyton~Jones and Simon Marlow.
\newblock Secrets of the glasgow haskell compiler inliner.
\newblock {\em Journal of Functional Programming}, 12(4-5):393–434, 2002.

\bibitem{lazyvseager}
Nayeong Song.
\newblock Comparison between lazy and strict evaluation.
\newblock {B.S.} thesis, 2020.

\bibitem{optimizationbugs}
Zhide Zhou, Zhilei Ren, Guojun Gao, and He~Jiang.
\newblock An empirical study of optimization bugs in gcc and llvm.
\newblock {\em Journal of Systems and Software}, 174:110884, 2021.

\end{thebibliography}
